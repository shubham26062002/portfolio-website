import type { Metadata } from 'next'
import { Lexend } from 'next/font/google'
import localFont from 'next/font/local'

import { ThemeProvider } from '@/components/theme-provider'
import { cn } from '@/lib/utils'
import '@/app/globals.css'

const lexend = Lexend({
  subsets: ['latin'],
})

const gliker = localFont({
  src: [{
    path: '../public/fonts/gliker/gliker-regular.woff2',
    weight: '400',
    style: 'normal',
  }, {
    path: '../public/fonts/gliker/gliker-semiBold.woff2',
    weight: '600',
    style: 'normal',
  }, {
    path: '../public/fonts/gliker/gliker-bold.woff2',
    weight: '700',
    style: 'normal',
  }, {
    path: '../public/fonts/gliker/gliker-black.woff2',
    weight: '900',
    style: 'normal',
  }],
  display: 'swap',
  variable: '--font-gliker',
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

interface RootLayoutProps {
  children: React.ReactNode,
}

const RootLayout = ({
  children,
}: RootLayoutProps) => {
  return (
    <html className={cn('h-full text-sm md:text-base lg:text-lg', gliker.variable)} lang="en" suppressHydrationWarning>
      <body className={cn('h-full bg-hero-image bg-fixed bg-no-repeat bg-center bg-cover lg:bg-contain', lexend.className)}>
        <ThemeProvider attribute="class" defaultTheme="dark">{children}</ThemeProvider>
      </body>
    </html>
  )
}

export default RootLayout
